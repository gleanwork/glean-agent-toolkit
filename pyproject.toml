[build-system]
requires = ["hatchling>=1.18.0"]
build-backend = "hatchling.build"

[project]
name = "glean-agent-toolkit"
version = "0.1.0"
description = "Universal Tool/Action Toolkit for Glean agent frameworks"
readme = "README.md"
authors = [{ name = "Glean", email = "dev@glean.com" }]
license = {text = "MIT"}
requires-python = ">=3.10,<4.0"
dependencies = [
    "pydantic>=2.7",
    "typer>=0.12.0",
    "rich>=13.0.0",
    "shellingham>=1.5.0",
    "glean-api-client>=0.5.2",
]

[project.optional-dependencies]
dev = [
    "commitizen>=4.4.1",
]
test = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.23.2",
    "pytest-cov>=4.1.0",
    "pytest-httpx>=0.35.0",
    # Optional dependencies for testing adapters
    "openai>=1.0.0",
    "openai-agents>=0.0.11",
    "langchain>=0.1.0",
    "crewai>=0.28.0",
    "google-adk>=0.1.0",
]
openai = [
    "openai>=1.0.0",
    "openai-agents>=0.0.11",
]
adk = [
    "google-adk>=0.1.0",
]
langchain = [
    "langchain>=0.1.0",
]
crewai = [
    "crewai>=0.28.0",
]
codespell = [
    "codespell>=2.2.6",
]
lint = [
    "ruff>=0.5",
]
typing = [
    "pyright>=1.1.370",
]

[project.scripts]
glean-toolkit = "glean.toolkit.cli:app"

[project.urls]
"Source Code" = "https://github.com/gleanwork/glean-agent-toolkit"

[tool.hatch.build.targets.wheel]
packages = ["src/glean"]

[tool.pyright]
include = ["src", "tests"]
exclude = ["**/__pycache__", ".venv/"]
venvPath = "."
pythonVersion = "3.13"
reportMissingImports = "warning"
reportUnusedVariable = "warning"

executionEnvironments = [
  { root = "src" }
]

[tool.ruff]
src = ["src"]
line-length = 100
target-version = "py310"
exclude = [
    "docs/",
    ".venv/",
    "**/site-packages/",
    "__pycache__/",
    "dist/",
    "build/",
    "test/"
]

[tool.ruff.lint]
select = ["E", "F", "I", "W", "N", "D", "UP", "ANN", "T201"]
ignore = ["ANN401", "D203", "D212", "F401"]

[tool.ruff.lint.per-file-ignores]
"examples/*.py" = ["T201"]

[tool.ruff.lint.isort]
known-first-party = ["glean"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.coverage.run]
omit = ["tests/*"]

[tool.pytest.ini_options]
addopts = "--strict-markers --strict-config --durations=5"
testpaths = ["tests"]
python_files = "test_*.py"
asyncio_mode = "auto"
markers = [
    "load_json(name): Marks a test to load a JSON fixture file from tests/fixtures/<name>.json",
] 
